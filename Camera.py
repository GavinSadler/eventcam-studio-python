import numpy as np

from FrameBuffer import FrameBuffer


class Camera:

    width: int = -1
    """ Stores the width of the camera's image in pixels """

    height: int = -1
    """ Stores the height of the camera's image in pixels """

    lastFrame: np.ndarray = None
    """ Stores the last frame generated by the camera """

    connected: bool = False
    """ Tells if the camera is connected or not """

    streaming: bool = False
    """ Tells if the camera is streaming or not """

    recording: bool = False
    """ Tells if the camera is recording or not """

    frameBuffer: FrameBuffer = None
    """ The FrameBuffer object the camera should write its frame to, if provided """

    def __init__(self):
        self.callbacks = {}
        self.lastFrame = np.ndarray(0)

    def connect(self):
        raise NotImplementedError

    def startStreaming(self):
        raise NotImplementedError

    def stopStreaming(self):
        raise NotImplementedError

    def startRecording(self):
        raise NotImplementedError

    def stopRecording(self):
        raise NotImplementedError
